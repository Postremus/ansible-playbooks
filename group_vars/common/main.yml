---

service_definitions:
  traefik:
    name: traefik
    template_name: "traefik/traefik"
    environments:
      - "{{ environments.prod }}"
      - "{{ environments.dev }}"
    files:
      - name: "traefik/acme.json"
        overwrite: false
        mode: "0600"
    networks:
      - name: "common_dev_traefik"
        driver: "overlay"
      - name: "common_prod_traefik"
        driver: "overlay"
  visualizer:
    name: visualizer
    image: dockersamples/visualizer
    internal_port: 8080
    environments:
      - "{{ environments.prod }}"
      - "{{ environments.dev }}"
    constraints:
      - "node.role == manager"
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    features:
      - "secure"
  record_jar_converter_rest_api:
    name: record_jar_converter_rest_api
    image: postremus/record-jar-converter-rest-api
    internal_port: 8043
    environments:
      - "{{ environments.prod }}"
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == stateless"
    features:
      - "secure"
    labels:
      - "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin:*"
  record_jar_converter_site:
    name: record_jar_converter_site
    image: postremus/record-jar-converter-site
    internal_port: 8043
    environments:
      - "{{ environments.prod }}"
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == stateless"
    features:
      - "secure"
  record_jar_converter:
    name: record_jar_converter
    image: postremus/record-jar-converter-web
    internal_port: 8080
    environments:
      - "{{ environments.prod }}"
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == stateless"
    features:
      - "secure"
  jwt:
    name: jwt
    image: postremus/github-jwt-integration-web
    internal_port: 8080
    environments:
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == stateless"
    secrets:
      - source: "DEV_TOKEN_KEY_SECRET"
        target: "token.key.secret"
        env: "dev"
    features:
      - "secure"
  json:
    name: json
    image: postremus/jsonpretty-web
    internal_port: 8080
    environments:
      - "{{ environments.prod }}"
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == stateless"
    features:
      - "secure"
  xml:
    name: xml
    image: postremus/xmlpretty-web
    internal_port: 8080
    environments:
      - "{{ environments.prod }}"
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == stateless"
    features:
      - "secure"
  mongodb:
    name: mongodb
    image: mongo
    internal_port: 27017
    template_name: "common-app"
    environments:
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == mongodb"
    env_vars:
      - "MONGO_INITDB_ROOT_USERNAME_FILE=/run/secrets/MONGO_INITDB_ROOT_USERNAME"
      - "MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/MONGO_INITDB_ROOT_PASSWORD"
    secrets:
      - "MONGO_INITDB_ROOT_USERNAME"
      - "MONGO_INITDB_ROOT_PASSWORD"
  jenkins:
    name: jenkins
    image: postremus/images_jenkins
    internal_port: 8080
    environments:
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == build"
    features:
      - "secure"
    volumes:
      - type: volume
        source: jenkins-data
        target: /var/jenkins_home
      - type: bind
        source: /root/id_rsa_docker
        target: /var/jenkins_home/.ssh/id_rsa
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    named_volumes:
      - name: jenkins-data
        driver: local
  prometheus:
    name: prometheus
    image: prom/prometheus
    internal_port: 9090
    environments:
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == build"
    features:
      - "secure"
    files:
      - name: "prometheus/prometheus.yml"
        overwrite: false
        mode: "0600"
    volumes:
      - type: bind
        source: /dev/sdc/prometheus
        target: /data/
      - type: bind
        source: "{{ docker_service_dir }}/common_dev/prometheus/prometheus.yml"
        target: "/data/prometheus.yml"
  grafana:
    name: grafana
    image: grafana/grafana
    internal_port: 3000
    environments:
      - "{{ environments.dev }}"
    constraints:
      - "node.role == worker"
      - "node.labels.purpose == build"
    features:
      - "secure"
    volumes:
      - type: bind
        source: /dev/sdc/grafana
        target: /var/lib/grafana
    env_vars:
      - "GF_SERVER_DOMAIN=grafana.build.pro-crafting.com"
      - "GF_SERVER_ROOT_URL=https://grafana.build.pro-crafting.com/"